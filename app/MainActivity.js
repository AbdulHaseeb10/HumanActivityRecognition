import React, { useState, useEffect } from 'react';
import { View, Text, Button } from 'react-native';
import { Accelerometer, Gyroscope, Magnetometer } from 'expo-sensors';
import ActivityClassifier from './ActivityClassifier';

let ax=[],ay=[],az=[];
let gx=[],gy=[],gz=[];
let mx=[],my=[],mz=[];

  const Ax = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]
  const Ay = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]
  const Az = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]


  const bx = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]
  const by = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]
  const bz = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]

  
  const cx = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]
  const cy = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]
  const cz = [0.256, -0.876, -0.554, 0.123, 0.756, -0.324, -0.678, 0.876, -0.456, 0.987, -0.654, -0.321, 0.567, -0.789, 0.345, -0.432, -0.987, 0.123, 0.678, -0.567, 0.890, -0.098, 0.456, -0.345, -0.234, 0.567, -0.789, 0.876, -0.654, 0.321, -0.432, 0.789, -0.567, -0.123, 0.678, -0.987, 0.234, -0.789, 0.567, -0.456, -0.321, 0.876, -0.098, 0.345, -0.567, 0.890, -0.654, -0.234, 0.876, -0.789, 0.456, -0.678, 0.321, -0.123, 0.567, -0.987, 0.123, -0.432, 0.789, -0.345, -0.456, 0.890, -0.678, 0.987, -0.098, -0.567, 0.234, 0.876, -0.789, 0.456, -0.321, 0.567, -0.234, -0.678, 0.789, -0.456, 0.987, -0.321, 0.234, -0.567, 0.890, -0.654, 0.123, -0.987, 0.345, -0.789, 0.567, -0.432, 0.098, -0.876, 0.321, -0.567, 0.234, -0.789, 0.890, -0.098, 0.567, -0.456, 0.678, -0.123, -0.987, 0.876, -0.234, 0.789, -0.345, 0.456, -0.567, -0.321, 0.890, -0.098, 0.234]

  let data=[];
  data.push(Ax);
  data.push(Ay);
  data.push(Az);

  data.push(Ax);
  data.push(Ay);
  data.push(Az);

  data.push(Ax);
  data.push(Ay);
  data.push(Az);



const SensorExample = ({ sensorType }) => {
  const [data, setData] = useState({ x: 0, y: 0, z: 0 });

  useEffect(() => {
    let subscription = null;
    switch (sensorType) {
      case 'accelerometer':
        subscription = Accelerometer.addListener(newData => {
          ax.push(newData.x)
          ay.push(newData.y)
          az.push(newData.z)
          setData(newData);
        });
        break;
      case 'gyroscope':
        subscription = Gyroscope.addListener(newData => {
          gx.push(newData.x)
          gy.push(newData.y)
          gz.push(newData.z)
          setData(newData);
        });
        break;
      case 'magnetometer':
        subscription = Magnetometer.addListener(newData => {
          mx.push(newData.x)
          my.push(newData.y)
          mz.push(newData.z)
          setData(newData);
        });
        break;
      default:
        break;
    }

    return () => {
      if (subscription) {
        subscription.remove();
      }
      ax=[],ay=[],az=[]
       gx=[],gy=[],gz=[]
       mx=[],my=[],mz=[]
    };
  }, [sensorType]);

  const { x, y, z } = data;
  return (
    <View>
      <View>
      <Text style={{padding:10, fontSize:15, color:"grey"}}>X: {x}</Text>
      <Text style={{padding:10, fontSize:15, color:"grey"}}>Y: {y}</Text>
      <Text style={{padding:10, fontSize:15, color:"grey"}}>Z: {z}</Text>
    </View>
    </View>
  );
};

const App = () => {
  const [isGenerating, setIsGenerating] = useState(false);

  const toggleGenerating = () => {
    setIsGenerating(prevState => !prevState);
  };

  return (
    <View>
      <ActivityClassifier/>
      <Button title={isGenerating ? "Stop" : "Start"} onPress={toggleGenerating} />
      {isGenerating && (
        <>
          <View>
      <Text style={{fontSize:25,margin:10}} >Accelerometer:</Text>
      <SensorExample sensorType="accelerometer" />

      <Text style={{fontSize:25,margin:10}}>Gyroscope:</Text>
      <SensorExample sensorType="gyroscope" />

      <Text style={{fontSize:25,margin:10}}>Magnetometer:</Text>
      <SensorExample sensorType="magnetometer" />
    </View>
        </>
      )}
      {console.log("ax ay az\ngx gy gz\nmx my mz",az,ay,az,gx,gy,gz,mx,my,mz)}
    </View>
  );
};

export default App;
